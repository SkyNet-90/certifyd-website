version: "3.8"

services:
  # Nginx Web Server
  certifyd-web:
    image: nginx:alpine
    container_name: certifyd-web
    restart: unless-stopped
    ports:
      - "9001:80"
    volumes:
      - web-data:/usr/share/nginx/html
    depends_on:
      - certifyd-git-sync
    networks:
      - certifyd-network
    labels:
      - "com.docker.compose.service=web"
    command: |
      sh -c "
      # Create a simple nginx config
      cat > /etc/nginx/nginx.conf << 'EOF'
      events {
          worker_connections 1024;
      }
      
      http {
          include /etc/nginx/mime.types;
          default_type application/octet-stream;
          
          sendfile on;
          keepalive_timeout 65;
          
          gzip on;
          gzip_types text/plain text/css application/json application/javascript text/xml application/xml text/javascript;
          
          server {
              listen 80;
              server_name localhost;
              root /usr/share/nginx/html;
              index index.html;
              
              location / {
                  try_files \$uri \$uri/ /index.html;
              }
              
              location /health {
                  return 200 'healthy';
                  add_header Content-Type text/plain;
              }
          }
      }
      EOF
      
      # Create a simple index.html if it doesn't exist
      if [ ! -f /usr/share/nginx/html/index.html ]; then
          cat > /usr/share/nginx/html/index.html << 'HTMLEOF'
      <!DOCTYPE html>
      <html>
      <head>
          <title>Certifyd Website Loading...</title>
      </head>
      <body>
          <h1>Certifyd Website</h1>
          <p>Website is loading... Please wait for the build process to complete.</p>
          <p>If you see this message, nginx is working but the React app hasn't been built yet.</p>
      </body>
      </html>
      HTMLEOF
      fi
      
      # Start nginx
      echo 'Starting nginx...'
      nginx -g 'daemon off;'
      "

  # Git Sync & Build Container  
  certifyd-git-sync:
    image: registry.k8s.io/git-sync/git-sync:v4.2.1
    container_name: certifyd-git-sync
    restart: unless-stopped
    environment:
      - GITSYNC_REPO=${GIT_REPO:-https://github.com/SkyNet-90/Certifyd-Website.git}
      - GITSYNC_BRANCH=${GIT_BRANCH:-main}
      - GITSYNC_ROOT=/git
      - GITSYNC_DEST=source
      - GITSYNC_PERIOD=5m
      - GITSYNC_ONE_TIME=false
      - GITSYNC_MAX_FAILURES=5
    volumes:
      - git-data:/git
    networks:
      - certifyd-network
    labels:
      - "com.docker.compose.service=git-sync"

  # Build Container
  certifyd-builder:
    image: node:18-alpine
    container_name: certifyd-builder
    restart: unless-stopped
    working_dir: /app
    environment:
      - NODE_ENV=production
    volumes:
      - git-data:/git:ro
      - web-data:/app/dist
      - builder-cache:/app/.npm
    command: |
      sh -c "
        echo 'üöÄ Starting Certifyd Builder...'
        
        # Wait for git-sync to populate data
        while [ ! -d /git/source ]; do
          echo '‚è≥ Waiting for git-sync to clone repository...'
          sleep 5
        done
        
        echo 'üìÅ Source directory found, starting build...'
        
        # Copy source to working directory  
        echo 'üìã Copying source files...'
        cp -r /git/source/* /app/ 2>/dev/null || echo 'Copy completed with warnings'
        
        # Install dependencies
        echo 'üì¶ Installing dependencies...'
        npm ci --cache /app/.npm --silent
        
        # Build the project
        echo 'ÔøΩ Building React application...'
        npm run build
        
        # Copy built files to web directory
        echo 'üì§ Deploying to web server...'
        rm -rf /app/dist/*
        cp -r /app/dist/* /app/dist/ 2>/dev/null || echo 'Copying build output...'
        
        # Verify build output exists
        if [ -f /app/dist/index.html ]; then
          echo '‚úÖ Build completed successfully!'
          echo 'üåê Website should now be available'
        else
          echo '‚ùå Build failed - no index.html found'
          exit 1
        fi
        
        # Keep container running and watch for changes
        echo 'üëÄ Watching for repository changes...'
        while true; do
          sleep 300  # Check every 5 minutes
          if [ -f /git/source/.git/FETCH_HEAD ]; then
            if [ /git/source/.git/FETCH_HEAD -nt /app/.last-build ]; then
              echo 'üîÑ Repository updated, rebuilding...'
              npm run build
              cp -r /app/dist/* /app/dist/
              touch /app/.last-build
              echo '‚úÖ Rebuild completed!'
            fi
          fi
        done
      "
    networks:
      - certifyd-network
    labels:
      - "com.docker.compose.service=builder"

  # File Browser
  certifyd-filebrowser:
    image: filebrowser/filebrowser:v2.27.0
    container_name: certifyd-filebrowser
    restart: unless-stopped
    ports:
      - "9002:80"
    volumes:
      - git-data:/srv/git:ro
      - web-data:/srv/web:ro
      - filebrowser-data:/database
      - filebrowser-config:/config
    environment:
      - FB_DATABASE=/database/filebrowser.db
      - FB_CONFIG=/config/.filebrowser.json
    networks:
      - certifyd-network
    labels:
      - "com.docker.compose.service=filebrowser"

  # Cloudflare Tunnel
  certifyd-tunnel:
    image: cloudflare/cloudflared:latest
    container_name: certifyd-tunnel
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${CF_TUNNEL_TOKEN}
    networks:
      - certifyd-network
    labels:
      - "com.docker.compose.service=tunnel"

volumes:
  git-data:
    driver: local
  web-data:
    driver: local
  builder-cache:
    driver: local
  filebrowser-data:
    driver: local
  filebrowser-config:
    driver: local

networks:
  certifyd-network:
    driver: bridge
